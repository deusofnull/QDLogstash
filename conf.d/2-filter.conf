filter {
	
	if [type] == "rabbitmq_netflow_test" {
		geoip {
			source => "[netflow][ipv4_src_addr]"
                                target => "geoip"
                                add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
                                add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}"]
		}

	}

	if [type] == "netflow" {
		if [netflow][ipv4_src_addr] != "127.0.0.1"{

			geoip {
				source => "[netflow][ipv4_src_addr]"
				target => "geoip"
				add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
                        	add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}"]

			}
		}
	}

	if [type] == "netflowDst" {
		if [netflow][ipv4_dst_addr] != "127.0.0.1"{

                        geoip {
                                source => "[netflow][ipv4_dst_addr]"
                                target => "geoip"
                                add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
                                add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}"]

                        }
        	}
		

	}
	if [type] == "process" {
		mutate {
				gsub => [ "message", "\u0FFF" , ""]
				#removes all characters before the first curly bracket
				gsub => [ "message", "^.+?(?=\{)", ""]
				strip => ["message"]
		}
		json {
			source => "message"
			target => "process"
		}
		date {
		 	match => ["[process][timestamp]", "YYYY-MM-dd HH:mm:ss","dd-MM-YYYY HH:mm:ss" ]
		}
	}

	if [type] == "syslog" {

		grok {
			match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"}
			add_field => [ "received_at", "%{@timestamp}" ]
      			add_field => [ "received_from", "%{host}" ]
		}
		syslog_pri {}
		date {
      			match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    		}
	}


}
